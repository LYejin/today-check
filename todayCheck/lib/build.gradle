/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */
buildscript {
	dependencies {
      classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
   }
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: '2.7.4'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '2.7.4'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.4'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: '2.7.4'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.4'
implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.7.4'
implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.1.1'
// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.4'
implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
implementation 'io.jsonwebtoken:jjwt:0.9.1'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'com.h2database:h2:2.1.212'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.30'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.7.4'
	testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.4'
	testImplementation group: 'org.springframework.batch', name: 'spring-batch-test', version: '4.3.7'
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.7.3'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    compile("com.querydsl:querydsl-core:4.2.1")
    compile("com.querydsl:querydsl-apt:4.2.1")
    compile("com.querydsl:querydsl-jpa:4.2.1")
    compile("com.querydsl:querydsl-collections:4.2.1")
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

def querydslDir = "src/main/generated/queryDsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDirs = ['src/main/java', querydslDir]
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}